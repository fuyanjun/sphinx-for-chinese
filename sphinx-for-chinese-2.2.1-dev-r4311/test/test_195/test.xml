<?xml version="1.0" encoding="utf-8"?>
<test>

<name>ZONESPAN operator and zonespanlist() function</name>

<config>
indexer
{
	mem_limit		= 16M
}

searchd
{
	<searchd_settings/>
}

source test
{
	type			= mysql
	<sql_settings/>
	sql_query		= select * from test_table
	sql_attr_uint	= gid
	sql_attr_string = sgid
}

index test
{
	source			= test
	path			= <data_path/>/test
	html_strip		= 1
	index_sp		= 1
	index_zones		= zone*
}

</config>

<db_create>
create table test_table
(
	id int not null,
	gid int not null,
	sgid varchar(10) not null,
	title varchar(16384) not null
);
</db_create>
<db_drop>drop table if exists test_table;</db_drop>
<db_insert><![CDATA[insert into test_table values
	( 201, 3, 'bla', 'Of shoes, <zoneB><zoneC>and kings</zoneC>, and sealing wax, of cabbages, <zoneC>and ships.</zoneC></zoneB> bla' ),
	( 202, 3, 'bla', 'Of shoes, <zoneC>ships and kings</zoneC>, and sealing wax, of cabbages, <zoneC>and ships.</zoneC> bla' ),
	( 204, 3, 'bla', 'Of shoes, <zoneC>ships and kings</zoneC>, and sealing wax, of cabbages, <zoneC>and ships.</zoneC> bla' ),
	( 205, 3, 'bla', 'Of shoes, <zoneC>ships and kings</zoneC>, and sealing wax, of cabbages, <zoneC>and ships.</zoneC> bla' ),
	( 206, 3, 'bla', 'Of shoes, <zoneC>ships and kings</zoneC>, and sealing wax, of cabbages, <zoneC>and ships.</zoneC> bla' ),
	( 207, 3, 'bla', 'Of shoes, <zoneC>ships and kings</zoneC>, and sealing wax, of cabbages, <zoneC>and ships.</zoneC> bla' ),
	( 208, 3, 'bla', 'Of shoes, <zoneC>ships and kings</zoneC>, and sealing wax, of cabbages, <zoneC>and ships.</zoneC> bla' ),
	( 209, 3, 'bla', 'Of shoes, <zoneC>ships and kings</zoneC>, and sealing wax, of cabbages, <zoneC>and ships.</zoneC> bla' ),
	( 210, 3, 'bla', 'Of shoes, <zoneC>and kings</zoneC>, and sealing wax, of cabbages, <zoneC>and ships.</zoneC> bla' );]]></db_insert>
	

<sphqueries>
<sphinxql>select * from test where match('ZONESPAN:zoneC cabbages and kings')</sphinxql>
<sphinxql>select * from test where match('ZONESPAN:(zoneC,zoneB) kings and ships')</sphinxql>
<sphinxql>select * from test where match('ZONESPAN:zoneC and ships')</sphinxql>
<sphinxql>select * from test where match('ZONESPAN:zoneC kings and')</sphinxql>
<sphinxql>select * from test where match('ZONESPAN:zoneC and kings') order by id desc OPTION max_matches=2</sphinxql>
<sphinxql>select *, zonespanlist() as c from test where match('ZONESPAN:(zoneB,zoneC) ships cabbages') OPTION max_matches=3</sphinxql>
<sphinxql>select *, zonespanlist() as c from test where match('ZONESPAN:(zoneC,zoneB) ships cabbages') OPTION max_matches=3</sphinxql>
<sphinxql>select *, zonespanlist() as c from test where match('ZONESPAN:(zoneB,zoneC) ships and') OPTION max_matches=3</sphinxql> 
<sphinxql>select *, zonespanlist() as c from test where match('ZONESPAN:(zoneC,zoneB) ships and') OPTION max_matches=3</sphinxql>
<sphinxql>select *, zonespanlist() as c from test where match('ZONESPAN:(zoneC,zoneB) ships and') OPTION max_matches=2,sort_method=kbuffer</sphinxql>
<sphinxql>select *, zonespanlist() as c from test where match('ZONESPAN:(zoneC,zoneB) ships and') group by gid within group order by id desc OPTION max_matches=2</sphinxql>
</sphqueries>

</test>
